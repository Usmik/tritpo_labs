version: '3.8'

services:
  web:
    build: ./Innotter
    volumes:
      - ./Innotter:/app/
    ports:
      - 8000:8000
    image: app:usmik
    command: /app/entrypoint.sh
    depends_on:
      - rabbit
      - db
      - celery

  rabbit:
    image: rabbitmq:latest
    restart: on-failure
    ports:
      - 5672:5672
      - 15672:15672

  celery:
    volumes:
      - ./Innotter:/app
    build:
      context: ./Innotter
    command: pipenv run celery -A Innotter worker --loglevel=INFO
    depends_on:
      - db
      - rabbit
    restart: on-failure

  db:
    image: postgres:14.4-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432

  localstack:
    image: localstack/localstack
    ports:
      - 4566:4566
    environment:
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - PERSISTENCE=1
    volumes:
      - ${LOCALSTACK_VOLUME_DIR:-./Innotter/.localstack}:/var/lib/localstack
      - ./Innotter/scripts:/docker-entrypoint-initaws.d
      - /var/run/docker.sock:/var/run/docker.sock

  microservice:
    build: ./microservice
    volumes:
      - ./microservice:/microservice
    command: /microservice/entrypoint.sh
    depends_on:
      - web
      - rabbit
      - db
      - celery
      - localstack

volumes:
  postgres_data:
